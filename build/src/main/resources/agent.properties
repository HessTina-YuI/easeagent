name=demo-service
system=demo-system

### http server
# When the enabled value = false, agent will not start the http server
# You can use -Deaseagent.server.enabled=[true | false] to override.
easeagent.server.enabled=true
# http server port. You can use -Deaseagent.server.port=[port] to override.
easeagent.server.port=9900

# Enable health/readiness
easeagent.health.readiness.enabled=true

# forwarded headers page
# Pass-through headers from the root process all the way to the end
# format: easeagent.progress.forwarded.headers.{key}={headerName}
easeagent.progress.forwarded.headers.rootSource=root_source
# X-Mesh-Canary for mesh-app-backend
easeagent.progress.forwarded.headers.canary.0=X-Mesh-Canary

###
### output server
###
# if set empty value, agent will not init kafka, metrics and trace data will output to console
# observability.outputServer.bootstrapServer=127.0.0.1:9092
# observability.outputServer.timeout=10000
# observability.outputServer.enabled=true
###
### tracings
###
observability.tracings.sampledByQPS=100
observability.tracings.output.enabled=true

# [zipkin]: send data to zipkin server
# [system]: send data to kafka
# observability.tracings.output.target=zipkin
observability.tracings.output.target=system
# send data to zipkin server
#observability.tracings.output.target.zipkinUrl=http://localhost:9411/api/v2/spans
observability.tracings.output.target.zipkinUrl=https://dev.megaease.cn/zipkin

observability.tracings.output.topic=log-tracing
# 1000000 - 100
observability.tracings.output.messageMaxBytes=999900
observability.tracings.output.reportThread=1
observability.tracings.output.queuedMaxSpans=1000
observability.tracings.output.queuedMaxSize=1000000
observability.tracings.output.messageTimeout=1000

# get header from response headers then tag to tracing span
# format: observability.tracings.tag.response.headers.{key}={value}
# support ease mesh
# X-EG-Circuit-Breaker
# X-EG-Retryer
# X-EG-Rate-Limiter
# X-EG-Time-Limiter
observability.tracings.tag.response.headers.eg.0=X-EG-Circuit-Breaker
observability.tracings.tag.response.headers.eg.1=X-EG-Retryer
observability.tracings.tag.response.headers.eg.2=X-EG-Rate-Limiter
observability.tracings.tag.response.headers.eg.3=X-EG-Time-Limiter

# -------------------- global config ---------------------
plugin.observability.global.tracing.enabled=true
plugin.observability.global.metric.enabled=true
plugin.observability.global.metric.interval=30
plugin.observability.global.metric.topic=application-meter
plugin.observability.global.metric.appendType=kafka
# add service name to header enabled by name for easemesh
plugin.integrability.global.addServiceNameHead.enabled=true
# redirect the middleware address when env has address, see: com.megaease.easeagent.plugin.api.middleware.MiddlewareConfigProcessor
# about redirect: jdbc, kafka, rabbitmq, redis,
plugin.integrability.global.redirect.enabled=true

#
# -------------------- async ---------------------
plugin.observability.async.tracing.enabled=true

#
# -------------------- elasticsearch redirect ---------------------
plugin.integrability.elasticsearch.redirect.enabled=true


#
# -------------------- jvmMemory ---------------------
plugin.observability.jvmMemory.metric.enabled=true
plugin.observability.jvmMemory.metric.interval=30
plugin.observability.jvmMemory.metric.topic=platform-meter
plugin.observability.jvmMemory.metric.appendType=kafka

# -------------------- jvmGc ---------------------
plugin.observability.jvmGc.metric.enabled=true
plugin.observability.jvmGc.metric.interval=30
plugin.observability.jvmGc.metric.topic=platform-meter
plugin.observability.jvmGc.metric.appendType=kafka


#
# -------------------- httpServlet ---------------------
plugin.observability.httpServlet.tracing.enabled=true
plugin.observability.httpServlet.metric.enabled=true
plugin.observability.httpServlet.metric.interval=30
plugin.observability.httpServlet.metric.topic=application-meter
plugin.observability.httpServlet.metric.appendType=kafka


#
# -------------------- jdbc ---------------------
# jdbc tracing
plugin.observability.jdbc.tracing.enabled=true

# jdbcStatement metric
plugin.observability.jdbcStatement.metric.enabled=true
plugin.observability.jdbcStatement.metric.interval=30
plugin.observability.jdbcStatement.metric.topic=application-meter
plugin.observability.jdbcStatement.metric.appendType=kafka
# jdbcConnection metric
plugin.observability.jdbcConnection.metric.enabled=true
plugin.observability.jdbcConnection.metric.interval=30
plugin.observability.jdbcConnection.metric.topic=application-meter
plugin.observability.jdbcConnection.metric.appendType=kafka
# md5Dictionary metric
plugin.observability.md5Dictionary.metric.enabled=true
plugin.observability.md5Dictionary.metric.interval=30
plugin.observability.md5Dictionary.metric.topic=application-meter
plugin.observability.md5Dictionary.metric.appendType=kafka

# jdbc redirect
plugin.integrability.jdbc.redirect.enabled=true




#
# -------------------- kafka ---------------------
# kafka tracing
plugin.observability.kafka.tracing.enabled=true
# kafka metric
plugin.observability.kafka.metric.enabled=true
plugin.observability.kafka.metric.interval=30
plugin.observability.kafka.metric.topic=application-meter
plugin.observability.kafka.metric.appendType=kafka
# kafka redirect
plugin.integrability.kafka.redirect.enabled=true

#
# -------------------- rabbitmq ---------------------
# rabbitmq tracing
plugin.observability.rabbitmq.tracing.enabled=true
# rabbitmq metric
plugin.observability.rabbitmq.metric.enabled=true
plugin.observability.rabbitmq.metric.interval=30
plugin.observability.rabbitmq.metric.topic=application-meter
plugin.observability.rabbitmq.metric.appendType=kafka
# rabbitmq redirect
plugin.integrability.rabbitmq.redirect.enabled=true

#
# -------------------- redis ---------------------
# redis tracing
plugin.observability.redis.tracing.enabled=true
# redis metric
plugin.observability.redis.metric.enabled=true
plugin.observability.redis.metric.interval=30
plugin.observability.redis.metric.topic=application-meter
plugin.observability.redis.metric.appendType=kafka
# redis redirect
plugin.integrability.redis.redirect.enabled=true


#
# -------------------- springGateway ---------------------
# springGateway tracing
plugin.observability.springGateway.tracing.enabled=true
# springGateway metric
plugin.observability.springGateway.metric.enabled=true
plugin.observability.springGateway.metric.interval=30
plugin.observability.springGateway.metric.topic=application-meter
plugin.observability.springGateway.metric.appendType=kafka

#
# -------------------- request ---------------------
# httpclient tracingï¼šhttpclient and httpclient5
plugin.observability.httpclient.tracing.enabled=true
# okHttp tracing
plugin.observability.okHttp.tracing.enabled=true
# webclient tracing
plugin.observability.webclient.tracing.enabled=true
# feignClient tracing
plugin.observability.feignClient.tracing.enabled=true
# restTemplate tracing
plugin.observability.restTemplate.tracing.enabled=true

#
# -------------------- access ---------------------
# access: servlet and spring gateway
plugin.observability.access.metric.enabled=true
plugin.observability.access.metric.interval=30
plugin.observability.access.metric.topic=application-log
plugin.observability.access.metric.appendType=kafka

#
# -------------------- service name ---------------------
# add service name to header by name for easemesh. default name: X-Mesh-RPC-Service
plugin.integrability.serviceName.addServiceNameHead.propagate.head=X-Mesh-RPC-Service
